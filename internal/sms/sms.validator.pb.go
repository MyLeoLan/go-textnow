// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sms.proto

// SMS Service
//
// SMS Service API consists of 2 services to send a single and multiple SMSs
// This service is Idempotent:
//  It is safe to retry sending the same SMS and will be processed only once.
//  The client has to attach idempotency key with every single sms.

package sms

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *SMS) Validate() error {
	if this.IdempotencyKey == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("IdempotencyKey", fmt.Errorf(`value '%v' must not be an empty string`, this.IdempotencyKey))
	}
	if this.FromPhoneNumber == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("FromPhoneNumber", fmt.Errorf(`value '%v' must not be an empty string`, this.FromPhoneNumber))
	}
	if this.ToPhoneNumber == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("ToPhoneNumber", fmt.Errorf(`value '%v' must not be an empty string`, this.ToPhoneNumber))
	}
	if this.Content == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Content", fmt.Errorf(`value '%v' must not be an empty string`, this.Content))
	}
	return nil
}
func (this *SendOneRequest) Validate() error {
	if this.Sms != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Sms); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Sms", err)
		}
	}
	return nil
}
func (this *SendOneResponse) Validate() error {
	return nil
}
func (this *SendManyRequest) Validate() error {
	if this.Sms != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Sms); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Sms", err)
		}
	}
	return nil
}
func (this *SendManyResponse) Validate() error {
	return nil
}
